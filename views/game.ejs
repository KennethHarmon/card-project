<%- include("partials/header") %>

<div class="container-fluid px-5 mt-3">
    <div class="row">
        <div class="col">
            <h1>Game Code: <%=  lobbycode%> </h1>
            <h2 id="singleDisplay"></h2>
            <div id="leaderboard"></div>
            <br>
            <button id="Start" class="btn btn-danger mb-4">Start Game</button>
            <button id="ConfirmSelection" class="btn btn-danger mb-4">Confirm selection</button>
            <div id="usernames"></div>
            <div id="status"></div>
        </div>
    </div>
    <div id="handsdisplaytitle"></div>
    <div class="row mt-4" id="handsdisplay"></div>
    <h4 style="float: bottom;" id="instructions">Please choose two white cards: </h4>
    <div class="row" id="hand">
        <div id="overlay">
            <h3 id ="overlayText" style="color: white; margin: 40px">You're the single</h3>
        </div>
    </div>
    <div id="messagescontainer" class="mt-4">
        <h3>Chat:</h3>
        <ul id="messages"></ul>
        <form  id="messagesform" action="">
            <input autocomplete="off" id="m"/><button>Send</button>
        </form>
    </div>
</div>


<script>
    ///////////////////////////////////////////Declare public variables////////////////////////////////////////
    var socket = io();
    var currentRoom = "";
    var numOfUsers = 0;
    var handDisplay;
    var cardDisplayIndex = 0;
    var playerList;
    var currentCardDisplay = 0;
    var isWhiteRound = true;
    var isSingle = false;
    var Leaderboard = {};
    
    //Parse query headers in URL
    function getUrlParameter(name) {
        name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
        var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
        var results = regex.exec(location.search);
        return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
    };

    var username = getUrlParameter("username");
    var lobbycode = getUrlParameter("lobbycode");

    /////////////////////////////////////Start//////////////////////////////////////////////////////////////////
    socket.emit("newUser", {username: username, lobbycode: lobbycode})
    

    ///////////////////////////////////////////JQuery Event handlers////////////////////////////////////////////
    $("#Start").click(function(){
        socket.emit("Start game")
    });

    $("#hand").on('click','.handcard',function(){
        console.log("Clicked card")
        $( this ).toggleClass("selectedcard");
    });

    $("#ConfirmSelection").on("click", function() {
        console.log("Selecting")
        var selectedcards = [];
        var wrongTypeSelected = checkWrongTypeSelected();;
        var wrongCardAmount = checkWrongCardAmount();
        
        if(!wrongTypeSelected && !wrongCardAmount) {
            console.log("Hand okay");
            $(".selectedcard").each(function(index,el){
                var obj = {
                    text: el.textContent
                }
                el.classList.contains("gamewhitecard") ? obj.type = "white" : obj.type = "red";
                selectedcards.push(obj)
                $(this).remove()
            });
            socket.emit("send hand",{selectedcards:selectedcards});
            console.log("////////////////////////////");
            $("#overlay").css("display","block");
            console.log($("#overlayText").length);
            $("#overlayText").html("Waiting for others to select");
        };
    });

    $("#handsdisplay").on('click','#back', function() {
        showCardDisplay(-1);
    });
    
    $("#handsdisplay").on('click','#forward', function() {
        showCardDisplay(1);
    });

    $("#handsdisplaytitle").on("click","#singlevote",function() {
        console.log("starting new round");
        socket.emit("start new round", {winner: playerList[currentCardDisplay]});
    });

    $("form").submit(function(e){
        e.preventDefault();
        socket.emit("chat message", $("#m").val())
        $("#m").val("");
        return false;
    })

    /////////////////////////////////////////////////////////////Functions////////////////////////////////////////////////////////////

    //Displays the players hand
    function displayHand(data) {
        var listItem = ""; 
        $.each( data.hand, function( i, item ) {
            var type = data.hand[i].type;
            listItem += "<div class='col-5 col-sm-3 col-lg-2 col-xl-1 game" + type + "card handcard'><p>" + item.text + "</p></div>";
        });
        $( "#hand" ).html("<div id='overlay'><h3 id='overlayText' style='color: white; margin: 40px'>You're the single</h3></div>" + listItem);
    };

    //Shows the display of all other players hands
    function showCardDisplay(index) {
        if(currentCardDisplay === 0 && index === -1) {
            console.log("Error, can't go back.");
        }
        else if((currentCardDisplay + parseInt(index)) > (Object.keys(handDisplay).length) -1){
            console.log("Error, index too large.")
        }
        else {
            //Add to the current card display
            currentCardDisplay += index;
            
            //Makes the html to display selected players hand
            var holder = createPlayerDisplayHand(currentCardDisplay);

            //Populate the hands display html
            $("#handsdisplay").html(holder);

            //Check if they're single and hand selection is available and then show choose hand buttons
            if(isSingle && (Object.keys(handDisplay[playerList[currentCardDisplay]]).length === 3)) {
                $("#handsdisplaytitle").html("<h4 style='display:inline-block'>" + playerList[currentCardDisplay] + "'s date: " + "</h4><button id='singlevote' class='btn btn-success mx-3'>Choose this hand</button>");
            }
            else {
                $("#handsdisplaytitle").html("<h4 style='display:inline-block'>" + playerList[currentCardDisplay] + "'s date: " + "</h4>");
            };
        }
    };

    //Makes the html for showing other players cards
    function createPlayerDisplayHand(currentCardDisplay) {
        var holder = "<button id='back' class='btn btn-dark'><</button>";
        //Push cards into the display
        for(let i = 0; i < handDisplay[playerList[currentCardDisplay]].length; i++) {
            let currentCard = handDisplay[playerList[currentCardDisplay]][i];
            if(currentCard){
                var type = currentCard.type;
                holder += "<div class = 'col-5 col-sm-3 col-lg-2 col-xl-1 game" + type + "card'>" + currentCard.text + "</div>";          
            }
        };
        holder += "<button id='forward' class='btn btn-dark'>></button>";
        return holder;
    };

    //Sets up UI for the single this round
    function setupforSingle() {
        $("#overlay").css("display", "block");
        $("#overlayText").html("You're the single");
        isSingle = true;
    };


    //Populates the global player list
    function makePlayerList(hands) {
        var players = Object.keys(hands);
        playerList = players;
    };

    ///////////////////////////////////////////Hand verification///////////////////////////////////////////////////
    function checkWrongTypeSelected() {
        var hasWrongType = false;
        //Check if the wrong type of card has been selected
        $(".selectedcard").each(function(index,el){
            if(isWhiteRound && el.classList.contains("gameredcard")){
                console.log("Selected a red card in a white round.");
                hasWrongType = true;
            }
            else if(!isWhiteRound && el.classList.contains("gamewhitecard")){
                console.log("Selected a white card in a red round.");
                hasWrongType = true;
            }
        });
        return hasWrongType;
    };

    function checkWrongCardAmount() {
        //Check if the wrong amount of cards have been selected
        if((isWhiteRound && $(".selectedcard").length != 2) || (isWhiteRound === false && $(".selectedcard").length != 1) ) {
                console.log("Selected wrong amount of cards");
                return true;
        }
        else {return false};
    }


    ///////////////////////////////////////////////Leaderboard functions///////////////////////////////////////////

    function makeLeaderBoard(playerList) {
        console.log("MakingLeaderBoard")
        var tempItem = "<h4>Leaderboard: ";
        console.log(playerList)
        playerList.forEach(element => {
            Leaderboard[element] = 0;
            tempItem += element + ": " + Leaderboard[element] + " "
        });
        tempItem += "</h4>"
        $("#leaderboard").html(tempItem);
        console.log("LeaderBoard: "+ JSON.stringify(Leaderboard));
    };

    function updateLeaderBoard(winner,playerList){
        var tempItem = "<h4>Leaderboard: ";
        console.log(playerList)
        playerList.forEach(element => {
            if(element === winner) {
                Leaderboard[element]++;
            }
            tempItem += element + ": " + Leaderboard[element] + " "
        });
        tempItem += "</h4>"
        $("#leaderboard").html(tempItem);
        console.log("LeaderBoard: "+ JSON.stringify(Leaderboard));
    };


    //////////////////////////////////////////////////Socket Events////////////////////////////////////////////////
    socket.on("deck", (data) => {
        displayHand(data);
    });

    socket.on("Youre single", function() {
        $("#overlayText").html("You're the single");
        setupforSingle();
    });

    socket.on("single is", (data) => {
        $("#singleDisplay").html("Single: " + data.single);
    });

    socket.on("send back hand", (data) => {
        displayHand(data);
    })

    socket.on("next stage", (data) => {
        if(!isSingle){
            $("#overlay").css("display","none");
        }
        else {
            $("#overlayText").html("You're the single");
        }

        if(isWhiteRound) {
            handDisplay = data.hands;
            $("#instructions").text("Please pick a red card for someone else:");
        }
        else {
            console.log("Data hands: " + JSON.stringify(data.hands));
            console.log("HandDisplay = " + JSON.stringify(handDisplay));
            let dataKeys = Object.keys(data.hands);
            for(let i = 0; i < (Object.keys(handDisplay).length); i++) {
                data.hands[dataKeys[i]].forEach(element => {
                    handDisplay[dataKeys[i]].push(element);
                });
            }
            console.log("HandDisplay = " + JSON.stringify(handDisplay));
            $("#instructions").text("Please pick two white cards to make a date for the single:");
        }
        cardDisplayIndex = 0;
        makePlayerList(data.hands);
        showCardDisplay(cardDisplayIndex);
        isWhiteRound  = !isWhiteRound;
    });

    socket.on("game started", () => {
        $("#Start").css("display","none");
    });

    socket.on("clear singles", () => {
        console.log("Clear singles");
        isSingle = false;
        console.log("isSingle = " + isSingle);
        $("#overlay").css("display","none");
    });

    socket.on("new round started", function(data) {
        console.log("New round Started.")
        $("#singlevote").remove();
        if(isSingle) { 
            $("#overlay").css("display","block")
            $("#overlayText").html("You're the single.");
        }
        $("#handsdisplay").empty();
        $("#handsdisplaytitle").empty();
        updateLeaderBoard(data.winner,data.players);
    });

    socket.on('chat message', function(data){
      $('#messages').append('<li>' + "<strong>" + data.sender + ": " + "</strong>" + data.msg + "</li>");
    });

    socket.on("connectedRoom", (data) => {
        console.log("User " + username + " has connected to " + data.room + " room")
        makeLeaderBoard(data.players);
        currentRoom = data.room;
        numOfUsers++;
    });
</script>  
<%- include("partials/footer") %>